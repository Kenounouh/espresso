"use strict";(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[277],{6696:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return u}});var a=t(7462),i=t(3366),s=(t(7294),t(3905)),o=t(814),l=["components"],r={title:"Bandstructure Calculation",sidebar_label:"Bandstructure"},p=void 0,d={unversionedId:"hands-on/bands",id:"hands-on/bands",title:"Bandstructure Calculation",description:"",source:"@site/docs/hands-on/bands.mdx",sourceDirName:"hands-on",slug:"/hands-on/bands",permalink:"/espresso/hands-on/bands",draft:!1,editUrl:"https://github.com/pranabdas/espresso/blob/main/docs/hands-on/bands.mdx",tags:[],version:"current",frontMatter:{title:"Bandstructure Calculation",sidebar_label:"Bandstructure"},sidebar:"docs",previous:{title:"DOS calculation",permalink:"/espresso/hands-on/dos"},next:{title:"Al (metal)",permalink:"/espresso/hands-on/aluminum"}},c={},u=[],m={toc:u};function b(n){var e=n.components,r=(0,i.Z)(n,l);return(0,s.kt)("wrapper",(0,a.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Before we can run ",(0,s.kt)("inlineCode",{parentName:"p"},"bands")," calculation, we need to perform single-point ",(0,s.kt)("a",{parentName:"p",href:"/espresso/hands-on/scf"},"self\nconsistent field calculation"),". We have our input ",(0,s.kt)("inlineCode",{parentName:"p"},"scf")," file with some\nnew parameters:"),(0,s.kt)(o.Z,{language:"bash",title:"src/silicon/si_bands_scf.in",showLineNumbers:!0,mdxType:"CodeBlock"},"&CONTROL\n  calculation = 'scf',\n  restart_mode = 'from_scratch',\n  prefix = 'silicon',\n  outdir = './tmp/'\n  pseudo_dir = './pseudos/'\n  verbosity = 'high'\n/\n\n&SYSTEM\n  ibrav =  2,\n  celldm(1) = 10.2076,\n  nat =  2,\n  ntyp = 1,\n  ecutwfc = 50,\n  ecutrho = 400,\n  nbnd = 8,\n!  occupations = 'smearing',\n!  smearing = 'gaussian',\n!  degauss = 0.005\n/\n\n&ELECTRONS\n  conv_thr = 1e-8,\n  mixing_beta = 0.6\n/\n\nATOMIC_SPECIES\n  Si 28.086 Si.pz-vbc.UPF\n\nATOMIC_POSITIONS (alat)\n  Si 0.0 0.0 0.0\n  Si 0.25 0.25 0.25\n\nK_POINTS (automatic)\n  8 8 8 0 0 0\n"),(0,s.kt)("p",null,"Run the ",(0,s.kt)("inlineCode",{parentName:"p"},"scf")," calculation:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < si_bands_scf.in > si_bands_scf.out\n")),(0,s.kt)("p",null,"Next step is our band calculation (non-self consistent field) calculation. The\n",(0,s.kt)("inlineCode",{parentName:"p"},"bands")," calculation is ",(0,s.kt)("em",{parentName:"p"},"non self-consistent")," in the sense that it uses the\nground state electron density, Hartree, exchange and correlation potentials\ndetermined in the previous step. In case of non self-consistent calculation, the\n",(0,s.kt)("strong",{parentName:"p"},"pw.x")," program determines the Kohn-Sham eigenfunction and eigenvalues without\nupdating Kohn-Sham Hamiltonian at every iteration. We need to specify the\nk-points for which we want to calculate the eigenvalues. We can also specify\n",(0,s.kt)("inlineCode",{parentName:"p"},"nbnd"),". Below is the input file for band calculation:"),(0,s.kt)(o.Z,{language:"bash",title:"src/silicon/si_bands.in",showLineNumbers:!0,mdxType:"CodeBlock"},"&control\n  calculation = 'bands',\n  restart_mode = 'from_scratch',\n  prefix = 'silicon',\n  outdir = './tmp/'\n  pseudo_dir = './pseudos/'\n  verbosity = 'high'\n/\n\n&system\n  ibrav =  2,\n  celldm(1) = 10.2076,\n  nat =  2,\n  ntyp = 1,\n  ecutwfc = 50,\n  ecutrho = 400,\n  nbnd = 8\n /\n\n&electrons\n  conv_thr = 1e-8,\n  mixing_beta = 0.6\n /\n\nATOMIC_SPECIES\n  Si 28.086  Si.pz-vbc.UPF\n\nATOMIC_POSITIONS (alat)\n  Si 0.00 0.00 0.00\n  Si 0.25 0.25 0.25\n\nK_POINTS {crystal_b}\n5\n  0.0000 0.5000 0.0000 20  !L\n  0.0000 0.0000 0.0000 30  !G\n  -0.500 0.0000 -0.500 10  !X\n  -0.375 0.2500 -0.375 30  !U\n  0.0000 0.0000 0.0000 20  !G\n"),(0,s.kt)("p",null,"Again run ",(0,s.kt)("inlineCode",{parentName:"p"},"pw.x")," for ",(0,s.kt)("inlineCode",{parentName:"p"},"bands")," calculation:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x < si_bands.in > si_bands.out\n")),(0,s.kt)("p",null,"The bands are now calculated. We need some post processing in order to obtain\nthe data in more usable manner. Input file for ",(0,s.kt)("inlineCode",{parentName:"p"},"bands.x"),":"),(0,s.kt)(o.Z,{language:"bash",title:"src/silicon/si_bands_pp.in",showLineNumbers:!0,mdxType:"CodeBlock"},"&BANDS\n  prefix = 'silicon'\n  outdir = './tmp/'\n  filband = 'si_bands.dat'\n/\n"),(0,s.kt)("p",null,"Run ",(0,s.kt)("inlineCode",{parentName:"p"},"bands.x")," from post processing (PP) module:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bands.x < si_bands_pp.in > si_bands_pp.out\n")),(0,s.kt)("p",null,"Next we need to run ",(0,s.kt)("inlineCode",{parentName:"p"},"plotband.x")," We can run is interactively as follows (or you\ncan provide an input file instead). In oder to run interactively, type\n",(0,s.kt)("inlineCode",{parentName:"p"},"plotband.x")," in your terminal."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"     Input file > si_bands.dat\nReading    8 bands at     91 k-points\nRange:   -5.8300   16.3420eV  Emin, Emax > -6, 16\nhigh-symmetry point:  0.5000 0.5000 0.5000   x coordinate   0.0000\nhigh-symmetry point:  0.0000 0.0000 0.0000   x coordinate   0.8660\nhigh-symmetry point:  1.0000 0.0000 0.0000   x coordinate   1.8660\nhigh-symmetry point:  1.0000 0.2500 0.2500   x coordinate   2.2196\nhigh-symmetry point:  0.0000 0.0000 0.0000   x coordinate   3.2802\noutput file (gnuplot/xmgr) > si_bands.gnuplot\nbands in gnuplot/xmgr format written to file si_bands.gnuplot\n\n\noutput file (ps) > si_bands.ps\nEfermi > 6.6416\ndeltaE, reference E (for tics) 4, 0\nbands in PostScript format written to file si_bands.ps\n")),(0,s.kt)("p",null,"You will have ",(0,s.kt)("inlineCode",{parentName:"p"},"si_bands.ps")," with band diagram. Or you can use your favorite\nplotting program to make plots:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="notebooks/si-bands.ipynb" showLineNumbers',title:'"notebooks/si-bands.ipynb"',showLineNumbers:!0},"import matplotlib.pyplot as plt\nfrom matplotlib import rcParamsDefault\nimport numpy as np\n%matplotlib inline\n\nplt.rcParams[\"figure.dpi\"]=150\nplt.rcParams[\"figure.facecolor\"]=\"white\"\nplt.rcParams[\"figure.figsize\"]=(8, 6)\n\n# load data\ndata = np.loadtxt('../src/silicon/si_bands.dat.gnu')\n\nk = np.unique(data[:, 0])\nbands = np.reshape(data[:, 1], (-1, len(k)))\n\nfor band in range(len(bands)):\n    plt.plot(k, bands[band, :], linewidth=1, alpha=0.5, color='k')\nplt.xlim(min(k), max(k))\n\n# Fermi energy\nplt.axhline(6.6416, linestyle=(0, (5, 5)), linewidth=0.75, color='k', alpha=0.5)\n# High symmetry k-points (check bands_pp.out)\nplt.axvline(0.8660, linewidth=0.75, color='k', alpha=0.5)\nplt.axvline(1.8660, linewidth=0.75, color='k', alpha=0.5)\nplt.axvline(2.2196, linewidth=0.75, color='k', alpha=0.5)\n# text labels\nplt.xticks(ticks= [0, 0.8660, 1.8660, 2.2196, 3.2802], \\\n           labels=['L', '$\\Gamma$', 'X', 'U', '$\\Gamma$'])\nplt.ylabel(\"Energy (eV)\")\nplt.text(2.3, 5.6, 'Fermi energy', fontsize= small)\nplt.show()\n")),(0,s.kt)("picture",null,(0,s.kt)("source",{type:"image/webp",srcSet:t(9765).Z}),(0,s.kt)("img",{src:t(6705).Z,alt:"silicon-bands"})),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"The k values for high symmetry points can be found in the output file\n(si_bands_pp.out).")))}b.isMDXComponent=!0},6705:function(n,e,t){e.Z=t.p+"assets/images/silicon-bands-56f3d9af6b5d86ba5da780cbf6801b4a.png"},9765:function(n,e,t){e.Z=t.p+"assets/images/silicon-bands-a1a2786319101829eb5f78f018f412a4.webp"}}]);